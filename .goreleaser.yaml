version: 2

archives:
  - # Builds reference which build instances should be archived in this archive.
    builds:
      - pingcli

    # Archive format.
    #
    # If format is `binary`, no archives are created and the binaries are instead
    # uploaded directly.
    #
    # Valid options are:
    # - `tar.gz`
    # - `tgz`
    # - `tar.xz`
    # - `txz`
    # - `tar.zst`
    # - `tzst` # Since: v2.1.
    # - `tar`
    # - `gz`
    # - `zip`
    # - `binary`
    #
    # Default: 'tar.gz'.
    format: zip

builds:
  # You can have multiple builds defined as a yaml list
  - #
    # ID of the build.
    #
    # Default: Project directory name
    id: "pingcli"

    # Binary name.
    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.
    #
    # Default: Project directory name
    binary: pingcli

    # Custom environment variables to be set during the builds.
    # Invalid environment variables will be ignored.
    # For more info refer to: https://pkg.go.dev/cmd/go#hdr-Environment_variables
    #
    # Default: os.Environ() ++ env config section.
    # Templates: allowed.
    env:
      - CGO_ENABLED=0

    # GOOS list to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Choices for $GOOS are android, darwin, dragonfly, freebsd, illumos, ios, js, linux, netbsd, openbsd, plan9, solaris, wasip1, and windows.
    #
    # Default: [ 'darwin', 'linux', 'windows' ]
    goos:
      - darwin
      - linux
      - windows

    # GOARCH to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Choices for $GOARCH are amd64 (64-bit x86, the most mature port), 386 (32-bit x86), arm (32-bit ARM), arm64 (64-bit ARM), ppc64le (PowerPC 64-bit, little-endian), ppc64 (PowerPC 64-bit, big-endian), mips64le (MIPS 64-bit, little-endian), mips64 (MIPS 64-bit, big-endian), mipsle (MIPS 32-bit, little-endian), mips (MIPS 32-bit, big-endian), s390x (IBM System z 64-bit, big-endian), and wasm (WebAssembly 32-bit).
    #
    # Default: [ '386', 'amd64', 'arm64' ]
    goarch:
      - "386"
      - amd64
      - arm64

release:
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # If set to false, will NOT mark the release as "latest".
  # This prevents it from being shown at the top of the release list,
  # and from being returned when calling https://api.github.com/repos/OWNER/REPO/releases/latest.
  #
  # Available only for GitHub.
  #
  # Default is true.
  # Since: v1.20
  make_latest: true

  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default is `keep-existing`.
  mode: append

checksum:
  # Algorithm to be used.
  #
  # Accepted options are:
  # - sha256
  # - sha512
  # - sha1
  # - crc32
  # - md5
  # - sha224
  # - sha384
  # - sha3-256
  # - sha3-512
  # - sha3-224
  # - sha3-384
  # - blake2s
  # - blake2b
  #
  # Default: 'sha256'.
  algorithm: sha256

  # If true, will create one checksum file for each artifact.
  split: true

  # Disable the generation/upload of the checksum file.
  disable: false

dockers:
  - image_templates:
      - "wesleymccollam/pingcli:{{ .Tag }}-amd64"
    use: buildx
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--pull"
  - image_templates:
      - "wesleymccollam/pingcli:{{ .Tag }}-arm64"
    use: buildx
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--pull"
docker_manifests:
  - name_template: "wesleymccollam/pingcli:latest"
    image_templates:
      - "wesleymccollam/pingcli:{{ .Tag }}-amd64"
      - "wesleymccollam/pingcli:{{ .Tag }}-arm64"
  - name_template: "wesleymccollam/pingcli:{{ .Tag }}"
    image_templates:
      - "wesleymccollam/pingcli:{{ .Tag }}-amd64"
      - "wesleymccollam/pingcli:{{ .Tag }}-arm64"

winget:
  - # Publisher name.
    #
    # Templates: allowed.
    # Required
    publisher: pingcli-test

    # Your app's description.
    #
    # Templates: allowed.
    # Required
    # Default: inferred from global metadata.
    short_description: "The Ping CLI is a unified command line interface."

    # License name.
    #
    # Templates: allowed.
    # Required
    # Default: inferred from global metadata.
    license: "Apache"

    # Publisher URL.
    #
    # Templates: allowed.
    publisher_url: https://pingidentity.com

    # Publisher support URL.
    #
    # Templates: allowed.
    publisher_support_url: "https://github.com/wesleymccollam/pingcli-test/issues/new"

    # GOAMD64 to specify which amd64 version to use if there are multiple
    # versions from the build section.
    #
    # Default: 'v1'.
    goamd64: v1

    # Git author used to commit to the repository.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string.
    #
    # Templates: allowed.
    commit_msg_template: "{{ .PackageIdentifier }}: {{ .Tag }}"

    # Your app's homepage.
    #
    # Default: inferred from global metadata.
    homepage: "https://github.com/wesleymccollam/pingcli-test"

    # Your app's long description.
    #
    # Templates: allowed.
    # Default: inferred from global metadata.
    description: "The Ping CLI is a unified command line interface for configuring and managing Ping Identity Services."

    # License URL.
    #
    # Templates: allowed.
    license_url: "http://www.apache.org/licenses/"

    # Copyright.
    #
    # Templates: allowed.
    copyright: "Ping Identity Corporation"

    # Copyright URL.
    #
    # Templates: allowed.
    copyright_url: "https://support.pingidentity.com/s/article/Copyright-and-Trademarks"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # package - instead, it will be stored on the dist directory only,
    # leaving the responsibility of publishing it to the user.
    #
    # If set to auto, the release will not be uploaded to the repository
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    #
    # Templates: allowed.
    skip_upload: false

    # Release notes.
    #
    # If you want to use the release notes generated by GoReleaser, use
    # `{{.Changelog}}` as the value.
    #
    # Templates: allowed.
    release_notes: "{{.Changelog}}"

    # Release notes URL.
    #
    # Templates: allowed.
    release_notes_url: "https://github.com/wesleymccollam"

    # Tags.
    tags:
      - golang
      - cli

    # Repository to push the generated files to.
    repository:
      # Repository owner.
      #
      # Templates: allowed.
      owner: wesleymccollam

      # Repository name.
      #
      # Templates: allowed.
      name: pingcli-test

      # Optionally a branch can be provided.
      #
      # Default: default repository branch.
      # Templates: allowed.
      branch: main
